@page "/employeeGrowthChart"
@using BlazorAppWasmLab.Client.Components
@using BlazorAppWasmLab.Client.Interfaces
@using BlazorAppWasmLab.Client.Services
@inject IEmployeeSummaryService _employeeSummaryService
@implements IDisposable
<PageTitle>Employee Growth Chart</PageTitle>

@*一開始這這邊不會跑，因為ChartCount的初始為0*@
@for (var num = 0; num < ChartCount; num++)
{
    <div style="border: #0a53be 1px solid;">
        <div>第@(num + 1)張圖</div>
        <EmployeeGrowthChartComponent @ref="ChartComponent" DataSource="@DataSource"/>
    </div>
}

@code {

    public int ChartCount { get; set; } = 0;

    public IEnumerable<EmployeeSummary>? DataSource { get; set; }

    public EmployeeGrowthChartComponent ChartComponent
    {
        set => ChartComponents.Add(value);
    }

    public List<EmployeeGrowthChartComponent> ChartComponents = new();
    private CancellationTokenSource _cancellationTokenSource = new();

    protected override void OnInitialized()
    {
    // 從這邊設定要畫20張圖，此時，畫面會長出20個div
        ChartCount = 20;
    // 這邊不用呼叫StateHasChanged
    // StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
    // 當畫面長出div後，開始畫圖
            foreach (var chart in ChartComponents)
            {
                var data = await _employeeSummaryService.GetDataAsync();
                DataSource = data;
                StateHasChanged();
    // if (_cancellationTokenSource.Token.IsCancellationRequested)
    // {
    //     break;
    // }
                await chart.Render();
            }
        }
    }


    public void Dispose()
    {
        _cancellationTokenSource.Cancel();
    }

}