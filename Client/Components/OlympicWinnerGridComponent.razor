@inject IJSRuntime _jsRuntime
@implements IAsyncDisposable
<div id="@ContainerId">我是pqGrid</div>

@code {

    [Parameter]
    public string ContainerId { get; set; } = string.Empty;

    [Parameter]
    public IEnumerable<OlympicWinner>? DataSource { get; set; }

    [Parameter]
    public string? SportName { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await _jsRuntime.InvokeVoidAsync("renderGrid", new {ContainerId, Data = DataSource});
    }

    public async Task Render(IEnumerable<OlympicWinner> data)
    {
        _jsModule = await _jsRuntime.InvokeAsync<IJSObjectReference>("import", $"./js/olympic-winner-chart-blazor.js");
        var chart = await _jsModule.InvokeAsync<IJSObjectReference>("createOlympicWinnerChart");
        await chart.InvokeVoidAsync("render", new {Data = data, ContainerId = Chart});
    }

    public async ValueTask DisposeAsync()
    {
        await (_jsModule?.DisposeAsync() ?? ValueTask.CompletedTask);
    }

    protected override bool ShouldRender()
    {
        return false;
    }

    private IJSObjectReference? _jsModule;
    public ElementReference Chart { get; set; }

}